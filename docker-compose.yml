version: '3.4'

services:
  api-php:
    image: ${CONTAINER_REGISTRY_BASE}/api-php
    build:
      context: ./api
      target: api_php
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/api-php
        - ${CONTAINER_REGISTRY_BASE}/api-nginx
        - ${CONTAINER_REGISTRY_BASE}/api-varnish
    depends_on:
      - db
    env_file:
      - ./api/.env
    # Comment out these volumes in production
    volumes:
      - ./api:/srv/api:rw,cached
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
      - ./api/var:/srv/api/var:rw

  api:
    image: ${CONTAINER_REGISTRY_BASE}/api-nginx
    build:
      context: ./api
      target: api_nginx
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/api-php
        - ${CONTAINER_REGISTRY_BASE}/api-nginx
        - ${CONTAINER_REGISTRY_BASE}/api-varnish
    depends_on:
      - api-php
    # Comment out this volume in production
    volumes:
      - ./api/public:/srv/api/public:ro
    ports:
      - "8080:80"

  cache-proxy:
    image: ${CONTAINER_REGISTRY_BASE}/api-varnish
    build:
      context: ./api
      target: api_varnish
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/api-php
        - ${CONTAINER_REGISTRY_BASE}/api-nginx
        - ${CONTAINER_REGISTRY_BASE}/api-varnish
    depends_on:
      - api
    volumes:
      - ./api/docker/varnish/conf:/usr/local/etc/varnish:ro
    tmpfs:
      - /usr/local/var/varnish:exec
    ports:
      - "8081:80"

  db:
    # In production, you may want to use a managed database service
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_DB=api
      - POSTGRES_USER=api-platform
      # You should definitely change the password in production
      - POSTGRES_PASSWORD=!ChangeMe!
    volumes:
      - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - "5432:5432"

  client-symfony-php:
    image: ${CONTAINER_REGISTRY_BASE}/client-symfony-php
    build:
      context: ./client-symfony
      target: client_symfony_php
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/client-symfony-php
        - ${CONTAINER_REGISTRY_BASE}/client-symfony
    env_file:
      - ./client-symfony/.env
    # Comment out these volumes in production
    volumes:
      - ./client-symfony:/srv/client-symfony:rw,cached
      # If you develop on Linux, uncomment the following line to use a bind-mounted host directory instead
      - ./client-symfony/var:/srv/client-symfony/var:rw

  client-symfony:
    image: ${CONTAINER_REGISTRY_BASE}/client-symfony
    build:
      context: ./client-symfony
      target: client_symfony_nginx
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/client-symfony-php
        - ${CONTAINER_REGISTRY_BASE}/client-symfony
    depends_on:
      - client-symfony-php
    # Comment out this volume in production
    volumes:
      - ./client-symfony/public:/srv/client-symfony/public:ro
    ports:
      - "80:80"

  client-react:
    # Use a static website hosting service in production
    # See https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#deployment
    image: ${CONTAINER_REGISTRY_BASE}/client-react
    build:
      context: client-react
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/client-react
    env_file:
      - client-react/.env
    volumes:
      - ./client-react:/usr/src/client-react:rw,cached
      - /usr/src/client-react/node_modules
    ports:
      - "81:3000"

  admin:
    # Use a static website hosting service in production
    # See https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#deployment
    image: ${CONTAINER_REGISTRY_BASE}/admin
    build:
      context: ./admin
      cache_from:
        - ${CONTAINER_REGISTRY_BASE}/admin
    env_file:
      - ./admin/.env
    volumes:
      - ./admin:/usr/src/admin:rw,cached
      - /usr/src/admin/node_modules
    ports:
      - "90:3000"

  h2-proxy:
    # Don't use this proxy in prod
    build:
      context: ./h2-proxy
    depends_on:
      - client-symfony
      - client-react
      - api
      - cache-proxy
      - admin
    ports:
      - "443:443"
      - "444:444"
      - "8443:8443"
      - "8444:8444"
      - "9443:9443"

volumes:
  db-data: {}
